<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Dao에서 메퍼 설정에서 필요한 엘리먼트(설정) 호출할 때 식별자 역할 : 필수! -->
<mapper namespace="com.bitcamp.open.member.dao.LoginDao">

	<!-- select 구문일 때 사용하는 태그 -->
	<!-- ID : 외부에서 해당 태그를 부를 때 사용하는 식별 이름, 메퍼 파일안에서 중복 X resultType : 질의의 결과를 
		지정하는 클래스 타입의 객체에 데이터 맵핑 parameterType : 여러 데이터를 하나의 객체에 담아서 받을 때 해당 객체 타입으로 
		지정 -->


	<!-- id로 검색 -->
	<select id="selectById" resultType="com.bitcamp.open.member.model.Member">

		SELECT * FROM MEMBER WHERE
		MEMBER_ID = #{ID}

	</select>

	<!-- list사용하려고 만듦 -->
	<select id="selectList" resultType="com.bitcamp.open.member.model.Member">

		SELECT * FROM MEMBER

	</select>

	<!--insert 태그는 데이터베이스에 데이터를 삽입하는 insert 구문을 사용할 때사용 -->
	<!-- ID : 외부에서 해당 태그를 부를 때 사용하는 식별 이름, 메퍼 파일안에서 중복 X parameterType : 여러 
		데이터를 하나의 객체에 담아서 받을 때 해당 객체 타입으로 지정 -->
	<insert id="insertMember" parameterType="com.bitcamp.open.member.model.Member"
		useGeneratedKeys="true" keyProperty="idx">

		<!-- 입력(insert update에만 적용)데이터베이스에서 내부적으로 생성한 키를 받는 (예를들어 RDBMS자동증가필드) 
			MemberRegService에 출력 찍어서 실행전과 실행 후 확인 해 봤음 -->

		INSERT INTO MEMBER (member_id,member_name,password,photo)
		VALUES(#{member_id},#{member_name},#{password},#{photo})

	</insert>

	<!-- 상세 정보 보기 -->

	<select id="viewInfo" resultType="com.bitcamp.open.member.model.Member">

		SELECT * FROM MEMBER WHERE
		MEMBER_ID = #{ID}

	</select>

	<!-- 수정 -->

	<update id="updateById" parameterType="com.bitcamp.open.member.model.Member">

         UPDATE MEMBER SET MEMBER_NAME= #{member_name}, PHOTO = #{photo} WHERE MEMBER_ID = #{member_id}
        
	</update>


	<!-- 삭제 -->

	<delete id="deletById" >
	
	      DELETE FROM MEMBER WHERE MEMBER_ID = #{ID}
	      
	</delete>


   <!--parameterType 받아오는게 Member형일 때 (이때는 이름을 맞춰줘야함), 
   resultType 결과가 Member형일 때  
   LoginDao에서 확인해서 가져온다 -->



</mapper>






