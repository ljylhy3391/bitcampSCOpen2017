<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
		
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/uploadfile/**" location="/uploadfile/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<!-- 데이터베이스 연결을 위한 dataSource 설정 -->
	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="com.mysql.jdbc.Driver" />
		<beans:property name="jdbcUrl"
			value="jdbc:mysql://localhost/openproject?characterEncoding=utf8" />
		<beans:property name="user" value="bit" />
		<beans:property name="password" value="bit" />
	</beans:bean>

	<!-- memberDao 빈 등록 -->
	<beans:bean id="memberDao" class="com.bitcamp.prac.dao.MemberDao">
		<beans:constructor-arg ref="dataSource" />
	</beans:bean>

	<!-- MemberRegService 빈 등록 -->
	<beans:bean id="memberRegService"
		class="com.bitcamp.prac.memeber.service.MemberRegService">
		<beans:property name="dao" ref="memberDao" />
	</beans:bean>

<!-- MemberLoginService 빈 등록 : 클래스 코드에서 자동 주입 어노테이션 사용 -->
	<beans:bean id ="memberLoginService"
		class="com.bitcamp.prac.memeber.service.MemberLoginService">	
	</beans:bean>
	
	<beans:bean id="memberService" class="com.bitcamp.prac.memeber.service.MemberListService"></beans:bean>
	
	

	<context:component-scan base-package="com.bitcamp.prac" />
	<context:component-scan base-package="com.bitcamp.prac.memeber.controller" />



</beans:beans>
