<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/css/**" location="/resources/css/" /> <!-- css 경로 설정 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/uploadfile/**" location="/uploadfile/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- 엑셀 커스텀 뷰 -->
	<beans:bean id="memberListXls"
		class="com.bitcamp.mvc.view.MemberListXlsView" />

	<!-- @Component, @Repository, @service, @Controller를 이해한다 (@Autowired, @Qualifier 
		포함) -->
	<context:component-scan
		base-package="com.bitcamp.mvc" />

	<!-- <beans:bean id="memberLoginService" class="com.bitcamp.mvc.service.MemberLoginService" 
		/> -->

	<!-- dataSource 설정 -->
	<beans:bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<beans:property name="driverClass"
			value="com.mysql.jdbc.Driver" />
		<beans:property name="jdbcUrl"
			value="jdbc:mysql://localhost/board?characterEncoding=utf8" />
		<beans:property name="user" value="bit" />
		<beans:property name="password" value="bit" />
	</beans:bean>

	<!-- JdbcTemplate 설정 <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<beans:property name="dataSource" ref="dataSource"/> </beans:bean> -->

	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<!-- 인터셉터 이용한 로그인 체크 -->
	<!-- 여러 핸들러인터셉터를 생정 -->
	<interceptors><!-- <mvc:interceptors> -->
		<!-- 한개의 핸들러인터셉터를 생성 -->
		<interceptor>
			<!-- 핸들러인터셉터를 적용할 경로 설정 -->
			<mapping path="/member/mypage/**" />
			<!-- 경로중 일부 경로를 제외하고 싶을 때 -->
			<!-- <mvc:exclude-mapping path="/mypage/help/**"/> -->
			<beans:bean
				class="com.bitcamp.mvc.interceptor.AuthCheckInterceptor" />
		</interceptor>
	</interceptors>

	<!-- mybatis -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:com/bitcamp/mvc/mapper/*.xml" />
	</beans:bean>

	<!-- 트랜잭션 처리 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource" />
		</beans:property>
	</beans:bean>
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- SqlSessionTemplate를 이용한 DAO 구현 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>
	<!-- <beans:bean id="mybatisDao" class="com.bitcamp.mvc.dao.MemberMyBatisDao" 
		/> -->

	<!-- 자바 메일 전송 -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="yurimailsender@gmail.com" />
		<beans:property name="password" value="yurimailsender5490" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="aES256Util" class="com.bitcamp.mvc.util.AES256Util">
		<beans:constructor-arg type="String" value="bitcampbitcampbitcampbitcamp" />
	</beans:bean>

</beans:beans>
